{"ast":null,"code":"var _jsxFileName = \"/Users/seungsoohan/LovleChat/frontend/src/components/ChatList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatList() {\n  _s();\n  const navigate = useNavigate();\n  const [chats, setChats] = useState([]);\n  const [personas, setPersonas] = useState([]);\n  const userId = \"user_74127\"; // 실제 로그인 연동 시 교체\n\n  useEffect(() => {\n    fetch(`/api/chat/list?userId=${userId}`).then(res => res.json()).then(data => {\n      if (data.ok) setChats(data.chats);\n    });\n    // 멀티프로필 목록도 함께 불러오기\n    fetch(`/api/persona?userId=${userId}`).then(res => res.json()).then(data => {\n      if (data.ok) setPersonas(data.personas);\n    });\n  }, []);\n\n  // 현재 존재하는 멀티프로필 id만 추출\n  const validPersonaIds = personas.map(p => p.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chats.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#888\",\n        textAlign: \"center\",\n        marginTop: 40\n      },\n      children: \"\\uB300\\uD654 \\uB0B4\\uC5ED\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : chats.filter(chat => validPersonaIds.includes(chat.personaId)).map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => navigate(`/chat/${chat.characterId}`),\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '16px 12px',\n        borderBottom: '1px solid #eee',\n        cursor: 'pointer',\n        gap: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 16,\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat.profileImg || \"/imgdefault.jpg\",\n          alt: chat.name,\n          style: {\n            width: 48,\n            height: 48,\n            borderRadius: '50%',\n            objectFit: 'cover'\n          },\n          onError: e => {\n            e.currentTarget.onerror = null;\n            e.currentTarget.src = \"/imgdefault.jpg\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            minWidth: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold',\n              fontSize: '1.1rem',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis'\n            },\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#666',\n              fontSize: '0.95rem',\n              marginTop: 4,\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              maxWidth: 200\n            },\n            children: chat.lastMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginLeft: 24,\n          minWidth: 60\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat.personaAvatar || \"/imgdefault.jpg\",\n          alt: chat.personaName || \"프로필\",\n          style: {\n            width: 40,\n            height: 40,\n            borderRadius: '50%',\n            objectFit: 'cover',\n            marginBottom: 2\n          },\n          onError: e => {\n            e.currentTarget.onerror = null;\n            e.currentTarget.src = \"/imgdefault.jpg\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 12,\n            color: '#bbb',\n            maxWidth: 60,\n            textAlign: 'center',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          },\n          children: chat.personaName || '유저프로필'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)]\n    }, chat.characterId + \"-\" + chat.personaId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatList, \"aIJ8qZIKmBaHQ4ZNKWp5zMAr5LQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","ChatList","_s","navigate","chats","setChats","personas","setPersonas","userId","fetch","then","res","json","data","ok","validPersonaIds","map","p","id","children","length","style","color","textAlign","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","filter","chat","includes","personaId","onClick","characterId","display","alignItems","justifyContent","padding","borderBottom","cursor","gap","flex","src","profileImg","alt","name","width","height","borderRadius","objectFit","onError","e","currentTarget","onerror","minWidth","fontWeight","fontSize","whiteSpace","overflow","textOverflow","maxWidth","lastMessage","flexDirection","marginLeft","personaAvatar","personaName","marginBottom","_c","$RefreshReg$"],"sources":["/Users/seungsoohan/LovleChat/frontend/src/components/ChatList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function ChatList() {\n  const navigate = useNavigate();\n  const [chats, setChats] = useState<any[]>([]);\n  const [personas, setPersonas] = useState<any[]>([]);\n  const userId = \"user_74127\"; // 실제 로그인 연동 시 교체\n\n  useEffect(() => {\n    fetch(`/api/chat/list?userId=${userId}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.ok) setChats(data.chats);\n      });\n    // 멀티프로필 목록도 함께 불러오기\n    fetch(`/api/persona?userId=${userId}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.ok) setPersonas(data.personas);\n      });\n  }, []);\n\n  // 현재 존재하는 멀티프로필 id만 추출\n  const validPersonaIds = personas.map(p => p.id);\n\n  return (\n    <div>\n      {chats.length === 0 ? (\n        <div style={{ color: \"#888\", textAlign: \"center\", marginTop: 40 }}>대화 내역이 없습니다.</div>\n      ) : (\n        chats\n          .filter(chat => validPersonaIds.includes(chat.personaId))\n          .map((chat) => (\n            <div\n              key={chat.characterId + \"-\" + chat.personaId}\n              onClick={() => navigate(`/chat/${chat.characterId}`)}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                padding: '16px 12px',\n                borderBottom: '1px solid #eee',\n                cursor: 'pointer',\n                gap: 16,\n              }}\n            >\n              <div style={{ display: 'flex', alignItems: 'center', gap: 16, flex: 1 }}>\n                <img\n                  src={chat.profileImg || \"/imgdefault.jpg\"}\n                  alt={chat.name}\n                  style={{ width: 48, height: 48, borderRadius: '50%', objectFit: 'cover' }}\n                  onError={e => { e.currentTarget.onerror = null; e.currentTarget.src = \"/imgdefault.jpg\"; }}\n                />\n                <div style={{ flex: 1, minWidth: 0 }}>\n                  <div style={{ fontWeight: 'bold', fontSize: '1.1rem', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>{chat.name}</div>\n                  <div style={{ color: '#666', fontSize: '0.95rem', marginTop: 4, whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 200 }}>{chat.lastMessage}</div>\n                </div>\n              </div>\n              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: 24, minWidth: 60 }}>\n                <img\n                  src={chat.personaAvatar || \"/imgdefault.jpg\"}\n                  alt={chat.personaName || \"프로필\"}\n                  style={{ width: 40, height: 40, borderRadius: '50%', objectFit: 'cover', marginBottom: 2 }}\n                  onError={e => { e.currentTarget.onerror = null; e.currentTarget.src = \"/imgdefault.jpg\"; }}\n                />\n                <span style={{ fontSize: 12, color: '#bbb', maxWidth: 60, textAlign: 'center', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>{chat.personaName || '유저프로필'}</span>\n              </div>\n            </div>\n          ))\n      )}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}